name: CI
on:
  push:
    branches: [master]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        ghc: [8.0.2, 8.2.2, 8.4.4, 8.6.5, 8.8.4, 8.10.7, 9.0.2, 9.2.4]
        cabal: [3.6.2.0]
        nginx: ['']
        experimental: [false]
        include:
          - ghc: 9.4.1
            cabal: 3.8.1.0
            nginx: ''
            experimental: false
          - ghc: 9.4.1
            cabal: 3.8.1.0
            nginx: head
            experimental: true
          - ghc: 9.4.1
            cabal: 3.8.1.0
            nginx: 1.22.0
            experimental: false
          - ghc: 9.2.4
            cabal: 3.6.2.0
            nginx: 1.22.0
            experimental: false
          - ghc: 9.0.2
            cabal: 3.6.2.0
            nginx: 1.20.2
            experimental: false
          - ghc: 8.10.7
            cabal: 3.6.2.0
            nginx: 1.18.0
            experimental: false
          - ghc: 8.8.4
            cabal: 3.6.2.0
            nginx: 1.16.1
            experimental: false
          - ghc: 8.6.5
            cabal: 3.6.2.0
            nginx: 1.14.2
            experimental: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install GHC and Cabal
        uses: haskell/actions/setup@v1
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - name: Install prove
        if: matrix.nginx != ''
        uses: perl-actions/install-with-cpanm@v1
        with:
          install: "Test::Nginx"
          tests: false
      - name: Install and test
        env:
          GHCVER: ${{ matrix.ghc }}
          NGXVER: ${{ matrix.nginx }}
          CABALVER: ${{ matrix.cabal }}
          JSMN_REV: 25647e692c7906b96ffd2b05ca54c097948e879c
          UPCONF_MODULE_PATH: examples/dynamicUpstreams/nginx-upconf-module
        run: |
          set -e
          cabal --version
          echo "$(ghc --version) "`
              `"[$(ghc --print-project-git-commit-id 2>/dev/null || echo '?')]"
          if echo "$CABALVER" | grep -q '^3\.[0-5]\.'
          then
              cabal v1-update
          else
              cabal v2-update
          fi
          cd haskell/ngx-export
          cabal v1-install --only-dependencies
          if [ -n "$NGXVER" ]
          then
              cd -
              if [ "$NGXVER" == head ]
              then
                  git clone https://github.com/nginx/nginx.git nginx-head
              else
                  wget http://nginx.org/download/nginx-${NGXVER}.tar.gz &&
                      tar xzvf nginx-${NGXVER}.tar.gz
              fi
              sudo wget -P /usr/include \
                  https://raw.githubusercontent.com/zserge/jsmn/$JSMN_REV/jsmn.h
              git clone https://github.com/openresty/echo-nginx-module.git
              cabal v1-install cpphs regex-pcre-builtin aeson bytestring safe
              cd -
          else
              cd -
              cd haskell/ngx-export-tools
              cabal v1-install --only-dependencies
              cd -
              cd haskell/ngx-export
          fi
          cabal v1-configure
          cabal v1-build
          cabal v2-sdist --builddir=dist
          SRC_TGZ=$(cabal info . | awk '{print $2; exit}').tar.gz &&
              (cd dist/sdist && cabal v1-install --force-reinstalls "$SRC_TGZ")
          if [ -n "$NGXVER" ]
          then
              cd -
              cd nginx-${NGXVER}/
              if [ "$NGXVER" == head ]
              then
                  NGX_CONFIGURE=./auto/configure
              else
                  NGX_CONFIGURE=./configure
              fi
              $NGX_CONFIGURE --add-module=.. \
                             --add-module=../aliases \
                             --add-module=../$UPCONF_MODULE_PATH \
                             --add-module=../echo-nginx-module
              make -j2
              export PATH="$(pwd)/objs:$PATH"
              cd -
              cd test
              export PATH="$HOME/.cabal/bin:$PATH"
              prove -r t-travis
          else
              cd -
              cd haskell/ngx-export-tools
              cabal v1-configure
              cabal v1-build
              cabal v2-sdist --builddir=dist
              SRC_TGZ=$(cabal info . | awk '{print $2; exit}').tar.gz &&
                  (cd dist/sdist &&
                  cabal v1-install --force-reinstalls "$SRC_TGZ")
          fi
          set +e

