# this nginx configuration file is for demonstration purpose only

user                    nginx;
worker_processes        2;

events {
    worker_connections  1024;
}

http {
    default_type        application/octet-stream;
    sendfile            on;

    upstream ubackend1 {
        server localhost:8020;
    }

    upstream ubackend2 {
        server localhost:8030;
    }

    upstream ufailover {
        server localhost:8040;
    }

    haskell load /var/lib/nginx/conditional_routing.so;

    server {
        listen       8010;
        server_name  main;
        error_log    /tmp/nginx-test-haskell-error.log;
        access_log   /tmp/nginx-test-haskell-access.log;

        location / {
            haskell_run_async_on_request_body reqFld $hs_rb_fld_user user;
            haskell_run_async fromRemoteDB $hs_async_dst
                    '["localhost:9000"
                     , [ [""    , "$cookie_dst"    ]
                       , ["user", "$arg_user"      ]
                       , ["user", "$hs_rb_fld_user"]
                       , [""    , "ufailover"      ]
                       ]
                     ]';
            #echo "DST: $hs_async_dst";
            proxy_pass http://$hs_async_dst;
        }
    }

    server {
        listen       8020;
        server_name  backend1;

        location / {
            echo "In backend1!";
        }
    }

    server {
        listen       8030;
        server_name  backend2;

        location / {
            echo "In backend2!";
        }
    }

    server {
        listen       8040;
        server_name  failover;

        location / {
            echo "In failover backend!";
        }
    }

    server {
        listen       9000;
        server_name  remoteDB;

        # set $failover to empty string if you want to make fromRemoteDB try
        # further key/value pairs when the value is not found
        set $failover ufailover;

        location / {
            echo -n $failover;
        }

        location /db/user/peter/ {
            echo -n ubackend1;
        }

        location /db/user/max/ {
            echo -n ubackend2;
        }
    }
}

# vim: ft=nginx
